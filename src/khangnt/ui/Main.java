/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package khangnt.ui;

import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import khangnt.category.TblCategoryDAO;
import khangnt.category.TblCategoryDTO;
import khangnt.category.TblCategoryModel;
import khangnt.product.TblProductDAO;
import khangnt.product.TblProductDTO;
import khangnt.product.TblProductModel;
import khangnt.utils.DBHelper;

/**
 *
 * @author khang
 */
public class Main extends javax.swing.JFrame {

    DBHelper dbAccess;

    TblCategoryDAO cateDao;
    TblCategoryModel cateModel;
    boolean addCate = false;

    TblProductDAO proDao;
    TblProductModel proModel;
    boolean addPro = false;
    Vector dataPro = new Vector<>();
    Vector<String> headerPro = new Vector<>();
    DefaultTableModel modelPro;

    void loadPro() {
        tblProList.updateUI();
        dataPro.removeAllElements();
        try {
            proDao = TblProductDAO.getAll();
            for (TblProductDTO pro : proDao) {
                Vector row = new Vector();
                row.add(pro.getProID());
                row.add(pro.getProName());
                row.add(pro.getCate());
                row.add(pro.getUnit());
                row.add(pro.getPrice());
                row.add(pro.getQuantity());
                dataPro.add(row);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    void loadCate() {
        try {
            List<TblCategoryDTO> cate = cateDao.getAllCate();
            for (TblCategoryDTO c : cate) {
                cateDao.add(c);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Product Manager");
        dbAccess = new DBHelper();

        cateDao = new TblCategoryDAO();
        loadCate();
        cateModel = new TblCategoryModel(cateDao);
        tblCateList.setModel(cateModel);

        proDao = new TblProductDAO();
        loadPro();
        proModel = new TblProductModel(proDao);

        headerPro.add("Product ID");
        headerPro.add("Product Name");
        headerPro.add("Unit");
        headerPro.add("Category ID");
        headerPro.add("Price");
        headerPro.add("Quantity");
        modelPro = (DefaultTableModel) tblProList.getModel();
        modelPro.setDataVector(dataPro, headerPro);

        this.cbCategoryName.setModel(new DefaultComboBoxModel(cateDao));

        tblCateList.updateUI();
        tblProList.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCateList = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCategoryID = new javax.swing.JTextField();
        txtCategoryName = new javax.swing.JTextField();
        txtDescription = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        btnCateNew = new javax.swing.JButton();
        btnCateSave = new javax.swing.JButton();
        btnCateDelete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProList = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        cbCategoryName = new javax.swing.JComboBox<>();
        txtUnit = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnProNew = new javax.swing.JButton();
        btnProSave = new javax.swing.JButton();
        btnProDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Main part:"));

        tblCateList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCateList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCateListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCateList);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail part:"));

        jLabel7.setText("Category ID:");

        jLabel8.setText("Category name:");

        jLabel11.setText("Description:");

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        btnCateNew.setText("Add New");
        btnCateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCateNewActionPerformed(evt);
            }
        });
        jPanel8.add(btnCateNew);

        btnCateSave.setText("Save");
        btnCateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCateSaveActionPerformed(evt);
            }
        });
        jPanel8.add(btnCateSave);

        btnCateDelete.setText("Delete");
        btnCateDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCateDeleteActionPerformed(evt);
            }
        });
        jPanel8.add(btnCateDelete);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDescription)
                            .addComponent(txtCategoryName)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtCategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(107, 107, 107))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCategoryID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Category", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Main part:"));

        tblProList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProList);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Detail part:"));

        jLabel1.setText("Product ID:");

        jLabel2.setText("Product name:");

        jLabel3.setText("Category name:");

        jLabel4.setText("Unit:");

        jLabel5.setText("Quantity:");

        jLabel6.setText("Price:");

        txtQuantity.setText("0");

        txtPrice.setText("0");

        jPanel5.setLayout(new java.awt.GridLayout(1, 0));

        btnProNew.setText("Add New");
        btnProNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProNewActionPerformed(evt);
            }
        });
        jPanel5.add(btnProNew);

        btnProSave.setText("Save");
        btnProSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProSaveActionPerformed(evt);
            }
        });
        jPanel5.add(btnProSave);

        btnProDelete.setText("Delete");
        btnProDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProDeleteActionPerformed(evt);
            }
        });
        jPanel5.add(btnProDelete);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtProductName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(txtProductID, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbCategoryName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPrice))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Product", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProNewActionPerformed
        // TODO add your handling code here:
        addPro = true;
        txtProductID.setEditable(true);
        txtProductID.setText("");
        txtProductID.requestFocus();
        txtProductName.setText("");
        txtQuantity.setText("0");
        txtUnit.setText("");
        txtPrice.setText("0");
    }//GEN-LAST:event_btnProNewActionPerformed
    public boolean validPro() {
        String proID = txtProductID.getText();
        String proName = txtProductName.getText();
        String unit = txtUnit.getText();
        String price = txtPrice.getText();
        String quantity = txtQuantity.getText();

        if (!proID.trim().matches("\\w+") || proID.isEmpty() || proID.length() > 10) {
            JOptionPane.showMessageDialog(this, "Wrong ID (no special char) - Not Empty - Length: 10!");
            txtProductID.requestFocus();
            addPro = true;
            return false;
        }
        if (addPro == true) {
            try {
                boolean check = proDao.checkPro(proID);
                if (check == true) {
                    JOptionPane.showMessageDialog(this, "This Product is Valid");
                    txtProductID.requestFocus();
                    return false;
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        if (proName.isEmpty() || proName.length() > 50) {
            JOptionPane.showMessageDialog(this, "Product Name is not Empty - Lenght: 50!");
            txtProductName.requestFocus();
            return false;
        }
        if (unit.isEmpty() || unit.length() > 50) {
            JOptionPane.showMessageDialog(this, "Unit is not Empty - Lenght: 50");
            txtUnit.requestFocus();
            return false;
        }
        if (!quantity.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Quantity is a number!");
            txtPrice.requestFocus();
            return false;
        }
        if (!price.matches("[0-9]+" + "." + "[0-9]+")) {
            JOptionPane.showMessageDialog(this, "Price is a number!");
            txtPrice.requestFocus();
            return false;
        }
        return true;
    }
    private void btnProSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProSaveActionPerformed
        // TODO add your handling code here:
        validPro();
        String proID = txtProductID.getText();
        String proName = txtProductName.getText();
        String unit = txtUnit.getText();
        float price = Float.parseFloat(txtPrice.getText());
        int quantity = Integer.parseInt(txtQuantity.getText());
        TblCategoryDTO cate = (TblCategoryDTO) cbCategoryName.getSelectedItem();
        TblProductDTO pro = new TblProductDTO(proID, proName, unit, price, quantity, cate);
        if (addPro == true) {
            try {
                int result = TblProductDAO.insert(pro);
                if (result > 0) {
                    Vector row = new Vector();
                    row.add(proID);
                    row.add(proName);
                    row.add(unit);
                    row.add(cate);
                    row.add(price);
                    row.add(quantity);
                    dataPro.add(row);
                    JOptionPane.showMessageDialog(this, "Product has been Added!");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        if (addPro == false) {
            try {
                int result = TblProductDAO.update(pro);
                if (result > 0) {
                    int selectRow = tblProList.getSelectedRow();
                    proDao.get(selectRow).setProName(proName);
                    proDao.get(selectRow).setUnit(unit);
                    proDao.get(selectRow).setPrice(price);
                    proDao.get(selectRow).setQuantity(quantity);
                    proDao.get(selectRow).setCate(cate);

                    JOptionPane.showMessageDialog(this, "Product has been updated!");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        tblProList.updateUI();
        loadPro();
    }//GEN-LAST:event_btnProSaveActionPerformed

    private void btnCateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCateNewActionPerformed
        addCate = true;
        txtCategoryID.setEditable(true);
        txtCategoryID.setText("");
        txtCategoryID.requestFocus();
        txtCategoryName.setText("");
        txtDescription.setText("");
    }//GEN-LAST:event_btnCateNewActionPerformed
    public boolean validCate() {
        String cateID = txtCategoryID.getText();
        String cateName = txtCategoryName.getText();
        String description = txtDescription.getText();
        if (!cateID.matches("\\w+") || cateID.isEmpty() || cateID.length() > 10) {
            JOptionPane.showMessageDialog(this, "Wrong ID (no special char) - Not Empty - Length: 10!");
            txtCategoryID.requestFocus();
            addCate = true;
            return false;
        }
        if (addCate == true) {
            try {
                boolean check = cateDao.checkCate(cateID);
                if (check == true) {
                    JOptionPane.showMessageDialog(this, "This Category is valid!");
                    txtCategoryID.requestFocus();
                    return false;
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        if (cateName.isEmpty() || cateName.length() > 50) {
            JOptionPane.showMessageDialog(this, "Category Name is not Empty - Length: 50!");
            txtCategoryName.requestFocus();
            return false;
        }
        if (description.length() > 200) {
            JOptionPane.showMessageDialog(this, "Length: 200!");
            txtDescription.requestFocus();
            return false;
        }
        return true;
    }
    private void btnCateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCateSaveActionPerformed
        // TODO add your handling code here:
        String cateID = txtCategoryID.getText();
        String cateName = txtCategoryName.getText();
        String descrip = txtDescription.getText();
        TblCategoryDTO newCate = new TblCategoryDTO(cateID, cateName, descrip);
        if (addCate == true) {
            if (validCate()) {
                try {
                    if (TblCategoryDAO.insert(newCate) >0) {
                        cateDao.add(newCate);
                        JOptionPane.showMessageDialog(this, "Category has been Added!");
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
        if (addCate == false) {
            if (validCate()) {
                try {
                    if (TblCategoryDAO.update(newCate) == 1) {
                        int selectCate = tblCateList.getSelectedRow();
                        cateDao.get(selectCate).setCategoryName(cateName);
                        cateDao.get(selectCate).setDescription(descrip);
                        JOptionPane.showMessageDialog(this, "Category has bean update!");
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        }
        tblCateList.updateUI();
        tblProList.updateUI();
        loadPro();
    }//GEN-LAST:event_btnCateSaveActionPerformed

    private void tblCateListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCateListMouseClicked
        // TODO add your handling code here:
        addCate = false;
        txtCategoryID.setEditable(false);
        tblCateList.updateUI();
        int pos = tblCateList.getSelectedRow();
        String find = tblCateList.getModel().getValueAt(pos, 0).toString();
        for (int i = 0; i < cateDao.size(); i++) {
            if (find.equals(cateDao.get(i).getCategoryID())) {
                TblCategoryDTO dto = cateModel.getDao().get(i);
                txtCategoryID.setText(dto.getCategoryID());
                txtCategoryName.setText(dto.getCategoryName());
                txtDescription.setText(dto.getDescription());
            }
        }
    }//GEN-LAST:event_tblCateListMouseClicked

    private void btnCateDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCateDeleteActionPerformed
        int select = tblCateList.getSelectedRow();
        if (select > 0) {
            try {
                boolean check = proDao.checkCateID(txtCategoryID.getText());
                if (check) {
                    JOptionPane.showMessageDialog(this, "This Category still has item! Delete all items before and try again!");
                } else {
                    int selectCate = tblCateList.getSelectedRow();
                    int r = JOptionPane.showConfirmDialog(this,
                            "Delete this category?", "Remove?", JOptionPane.YES_NO_OPTION);
                    if (r == JOptionPane.YES_OPTION) {
                        try {
                            String cateID = tblCateList.getValueAt(selectCate, 0).toString();
                            if (TblCategoryDAO.delete(cateID) == 1) {
                                cateDao.remove(selectCate);
                                tblCateList.updateUI();
                                loadPro();
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please choose the Category!");
        }
    }//GEN-LAST:event_btnCateDeleteActionPerformed

    private void tblProListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProListMouseClicked
        addPro = false;
        loadPro();
        txtProductID.setEditable(false);
        int pos = tblProList.getSelectedRow();
        String find = tblProList.getModel().getValueAt(pos, 0).toString();
        for (int i = 0; i < proDao.size(); i++) {
            if (find.equals(proDao.get(i).getProID())) {
                TblProductDTO pro = proModel.getDao().get(i);
                txtProductID.setText(pro.getProID());
                txtProductName.setText(pro.getProName());
                txtPrice.setText("" + pro.getPrice());
                txtUnit.setText(pro.getUnit());
                txtQuantity.setText("" + pro.getQuantity());
                int index = cateDao.find(pro.getCate().getCategoryID());
                cbCategoryName.setSelectedIndex(index);
            }
        }
    }//GEN-LAST:event_tblProListMouseClicked

    private void btnProDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProDeleteActionPerformed
        // TODO add your handling code here:
        int select = tblProList.getSelectedRow();
        if (select > 0) {
            int r = JOptionPane.showConfirmDialog(this, "Do you want to remove?", "Remove?", JOptionPane.YES_NO_OPTION);
            if (r == JOptionPane.YES_OPTION) {
                int selectRow = tblProList.getSelectedRow();
                String proID = tblProList.getValueAt(selectRow, 0).toString();
                try {
                    if (TblProductDAO.delete(proID) > 0) {
                        dataPro.remove(selectRow);
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
            tblProList.updateUI();
            loadPro();
        } else {
            JOptionPane.showMessageDialog(this, "Please choose the Product!");
        }
    }//GEN-LAST:event_btnProDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCateDelete;
    private javax.swing.JButton btnCateNew;
    private javax.swing.JButton btnCateSave;
    private javax.swing.JButton btnProDelete;
    private javax.swing.JButton btnProNew;
    private javax.swing.JButton btnProSave;
    private javax.swing.JComboBox<String> cbCategoryName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblCateList;
    private javax.swing.JTable tblProList;
    private javax.swing.JTextField txtCategoryID;
    private javax.swing.JTextField txtCategoryName;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables
}
